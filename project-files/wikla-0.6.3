(defproject wikla "0.6.3"

  :description "Behavior Tree in Clojure(Script)."

  :url "https://bitbucket.org/spottr/wikla/"

  :license {:name "MIT Public License"
            :distribution :repo
            :comments "LICENSE file in project root directory."}

  :dependencies [[org.clojure/clojure "1.8.0"]
                 [org.clojure/clojurescript "1.9.495"]
                 [prismatic/schema "1.1.3"]]

  :profiles {:dev {:plugins [[lein-auto "0.1.3"]
                             [lein-doo "0.1.7"]
                             [lein-cljsbuild "1.1.4"]
                             [lein-codox "0.10.2"]]
                   :dependencies [[criterium "0.4.4"]]
                   :source-paths ["dev"]}
             ; lein with-profile +1.7:+1.8 test-clj
             :1.7 {:dependencies [[org.clojure/clojure "1.7.0"]]}
             :1.8 {:dependencies [[org.clojure/clojure "1.8.0"]]}
             :1.9 {:dependencies [[org.clojure/clojure "1.9.0-alpha15"]]}
             :uberjar {:aot :all}}

  :codox {:metadata {:doc/format :markdown}
          :namespaces [#"^wikla\..*$"]
          ;; that was fun:
          :source-uri ~(str "https://bitbucket.org/spottr/wikla/src/"
                            "dd9e280ec5425fd73bef5c5488905d5a081f9641" ;; 0.6.2
                            "/{filepath}#{basename}-{line}")}
  :plugins []

  :aot []

  ;; file masks for lein-auto
  :auto {:default {:file-pattern #"\.(clj|cljs|cljc)$"}}

  ;; aliases are fun!
  :aliases {"test-all"                ["do" "clean," "test-clj," "test-cljs-node," "clean"]
            "test-clj"                ["run" "-m" "wikla.test-runner"]
            "test-watch"              ["auto" "test-all"]
            "test-clj-watch"          ["auto" "test-clj"]
            "test-cljs-node"          ["do" "doo" "node" "test-node" "once," "clean"]
            "test-cljs-node-watch"    ["do" "doo" "node" "test-node" "auto," "clean"]
            "test-cljs-nashorn"       ["do" "doo" "nashorn" "test-nashorn" "once," "clean"]
            "test-cljs-nashorn-watch" ["do" "doo" "nashorn" "test-nashorn" "auto," "clean"]
            "test"                    ["do" "clean," "test-clj"]
            "test!"                   ["do" "test-all"]
            "pack!"                   ["do" "clean," "compile," "uberjar"]
            "prep!"                   ["do" "test-all," "codox"]}

  ;:global-vars {*warn-on-reflection* true}
  :source-paths ["src/cljc"]
  :test-paths ["test/cljc"]
  :omit-source false
  :target-path "target/"
  :jar-name "wikla-light.jar"
  :uberjar-name "wikla.jar"
  :jvm-opts [;"-server"
             ;"-XX:+AggressiveOpts"
             ;"-XX:+PrintFlagsFinal"
             ;"-Xms128M" "-Xmx128M"
             ]

  ;; output directories for CLJS test platforms
  :clean-targets ["out-test-node" "out-test-nashorn" :target-path]

  ;; CLJS targets
  :cljsbuild {
              :builds {
                       :test-node {
                                   :source-paths ["src/cljc" "test/cljc"]
                                   :compiler     {:output-to     "out-test-node/testable.js"
                                                  :output-dir    "out-test-node"
                                                  :main          'wikla.test-runner
                                                  :parallel-build true
                                                  :optimizations :none
                                                  :target        :nodejs}}
                       :test-nashorn {
                                      :source-paths ["src/cljc" "test/cljc"]
                                      :compiler     {:output-to     "out-test-nashorn/testable.js"
                                                     :output-dir    "out-test-nashorn"
                                                     :main          'wikla.test-runner
                                                     :parallel-build true
                                                     :optimizations :whitespace}}}})

